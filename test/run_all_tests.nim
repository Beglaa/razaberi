# Auto-generated test runner - DO NOT EDIT MANUALLY
# Generated by: ./test/run_scan_for_tests.nim
# To regenerate: nim c -r test/run_scan_for_tests.nim

echo "PATTERN MATCHING TEST RUNNER"
echo "============================"
echo "Auto-generated test imports from ./test/ and ./test/func/ directories"
echo ""

# Main test directory imports (274 files)
import advanced/test_bug_sequence_spread_bounds
import advanced/test_group_patterns
import advanced/test_multiple_spread_bug_fix
import advanced/test_sequence_nil_in_object_field_bug
import advanced/test_spread_negative_index_fix
import advanced/test_spread_pattern_index_collision_bug
import advanced/test_spread_pattern_object_field_bug
import at_pattern/test_at_pattern_conditions_bodies_mismatch_bug
import at_pattern/test_at_pattern_guard_fix
import at_pattern/test_at_pattern_guard_variable_scoping_bug
import at_pattern/test_at_pattern_or_bug_comprehensive
import at_pattern/test_at_pattern_or_complex_expressions_bug
import at_pattern/test_at_pattern_parentheses_break_bug
import at_pattern/test_at_patterns
import at_pattern/test_nested_at_pattern_bug_fix
import at_pattern/test_nested_at_pattern_with_guards_bug
import at_pattern/test_nil_at_pattern_basic
import at_pattern/test_nil_at_pattern_bug
import at_pattern/test_nil_at_pattern_nnknillit_bug
import at_pattern/test_or_at_binding_tuple_context_bug
import at_pattern/test_phase1_3_mixed_collection_at_patterns
import at_pattern/test_phase2_advanced_at_pattern_extensions
import at_pattern/test_sequence_at_pattern_both_syntaxes_bug
import at_pattern/test_set_at_patterns
import at_pattern/test_table_at_pattern_values_bug
import collections/test_comprehensive_linked_lists
import collections/test_deque_patterns
import collections/test_linkedlist_gaps_fixed
import construct_metadata/test_construct_metadata
import core/test_basic_patterns
import core/test_parsing_patterns
import count_table/test_count_table_patterns
import deep_nesting/test_10_layer_infrastructure_destructuring
import deep_nesting/test_complete_25_level_pattern_matching
import deep_nesting/test_complex_nested_collections
import deep_nesting/test_comprehensive_deep_destructuring
import deep_nesting/test_deep_nesting
import deep_nesting/test_extreme_nesting_edge_cases
import deep_nesting/test_final_deep_patterns_22
import deep_nesting/test_simple_deep_destructuring
import deep_nesting/test_true_deep_pattern_destructuring
import deep_nesting/test_true_deep_patterns
import deep_nesting/test_working_true_deep
import defaults/test_comprehensive_defaults
import defaults/test_default_patterns
import defaults/test_dual_syntax_defaults
import defaults/test_simple_defaults
import defaults/test_spread_default_values_bug
import defaults/test_table_defaults
import defaults/test_tuple_default_values_bug
import enhancements/test_13_csharp_patterns
import enhancements/test_adaptive_levenshtein_suggestions
import enhancements/test_comprehensive_future_enhancements
import enhancements/test_pattern_matching_limitations
import enhancements/test_structural_sequence_patterns
import enhancements/test_working_enhancements_summary
import enums/test_enum_patterns
import enums/test_enum_set_type_mismatch_bug
import enums/test_enum_variable_binding
import enums/test_nonsequential_ordinals
import enums/test_union_enum_collision
import exhaustiveness_chk/test_enum_exhaustiveness_errors
import exhaustiveness_chk/test_exhaustiveness
import exhaustiveness_chk/test_exhaustiveness_checking
import exhaustiveness_chk/test_option_exhaustiveness_errors
import exhaustiveness_chk/test_strict_exhaustiveness
import exhaustiveness_chk/test_variant_exhaustiveness_errors
import exhaustiveness_chk/test_variant_or_exhaustiveness
import guards/test_debug_guard_cross_ref
import guards/test_guard_binding_fix
import guards/test_guards
import integration/test_array_filtering_complete
import integration/test_collection_filtering_bug
import integration/test_collection_filtering_missing_functionality
import integration/test_count_table_filtering
import integration/test_deque_filtering
import integration/test_doubly_linked_list_filtering
import integration/test_doubly_linked_ring_filtering
import integration/test_gemini_bug5_collision_fix
import integration/test_nested_object_collection_filtering
import integration/test_ordered_table_filtering
import integration/test_phase1_2_complex_guard_combinations
import integration/test_phase1_error_messages
import integration/test_phase1_integration_deep_nesting
import integration/test_phase1_integration_edge_cases
import integration/test_phase1_integration_errors
import integration/test_phase1_integration_mixed
import integration/test_phase1_integration_real_world
import integration/test_phase1_integration_variants
import integration/test_set_filtering_simple
import integration/test_singly_linked_list_filtering
import integration/test_singly_linked_ring_filtering
import integration/test_table_filtering_simple
import json/test_json_pattern_matching
import json/test_jsonnode_array_patterns
import json/test_jsonnode_at_patterns
import json/test_jsonnode_basic_patterns
import json/test_jsonnode_guard_expressions
import json/test_jsonnode_literal_matching
import json/test_jsonnode_nested_object_patterns
import json/test_jsonnode_or_patterns
import json/test_jsonnode_set_patterns
import json/test_jsonnode_tuple_patterns
import json/test_jsonnode_type_patterns
import negative/test_negative_deque_linkedlist_errors
import negative/test_negative_enum_errors
import negative/test_negative_jsonnode_errors
import negative/test_negative_object_field_errors
import negative/test_negative_option_errors
import negative/test_negative_ref_ptr_errors
import negative/test_negative_sequence_array_errors
import negative/test_negative_set_errors
import negative/test_negative_table_errors
import negative/test_negative_tuple_count_errors
import negative/test_negative_type_mismatches
import negative/test_negative_union_errors
import negative/test_negative_variant_errors
import object_class/test_basic_deep_object_destructuring
import objects/test_class_patterns
import objects/test_deep_object_destructuring
import objects/test_object_constructor_at_pattern_bug_fix
import objects/test_object_rest_destructuring
import objects/test_phase1_object_patterns
import objects/test_structural_object_patterns
import options/test_deep_mixed_pattern_issome_bug
import options/test_nested_option_patterns_simple
import options/test_option_patterns
import options/test_option_template_inconsistency_bug
import options/test_ref_option_bug_comprehensive
import or_patterns/test_or_at_table_rest_capture
import or_patterns/test_or_implicit_guard_patterns
import or_patterns/test_or_pattern_guard_binding_bug
import or_patterns/test_or_pattern_optimization
import or_patterns/test_or_pattern_some_none_bug
import or_patterns/test_or_pattern_variable_binding_bug
import or_patterns/test_or_pattern_variable_binding_complete
import or_patterns/test_or_patterns
import other/test_advanced_patterns
import other/test_all_patterns_22_levels
import other/test_api_routes_fixed
import pattern_validation/test_validation_compile_time
import pattern_validation/test_validation_deque
import pattern_validation/test_validation_enum
import pattern_validation/test_validation_jsonnode
import pattern_validation/test_validation_linkedlist
import pattern_validation/test_validation_nested_patterns
import pattern_validation/test_validation_operator_hints
import pattern_validation/test_validation_option
import pattern_validation/test_validation_ptr
import pattern_validation/test_validation_ref
import pattern_validation/test_validation_sequence
import pattern_validation/test_validation_set
import pattern_validation/test_validation_table
import pattern_validation/test_validation_union
import pattern_validation/test_validation_union_init_errors
import pattern_validation/test_validation_variant
import polymorphic/test_basic_polymorphic
import polymorphic/test_complex_polymorphic
import polymorphic/test_deep_polymorphic
import polymorphic/test_sequence_polymorphic
import polymorphic/test_table_polymorphic
import references/test_ptr_type_pattern_bug
import references/test_ref_at_nested_variable_scoping_bug
import references/test_ref_field_object_constructor_bug
import references/test_ref_nil_object_constructor_priority_bug
import references/test_ref_ptr_object_constructor_pattern_bug
import references/test_ref_ptr_patterns
import references/test_ref_sequence_field_comparison_bug
import references/test_simple_pointer_bug
import regression/test_bug_critical_numeric_type_coercion
import regression/test_bug_critical_type_coercion
import regression/test_bug_numeric_type_coercion
import regression/test_circular_reference_bugs
import regression/test_comprehensive_bug_validation
import regression/test_discovered_pattern_bugs
import regression/test_empty_collection_patterns_bug
import regression/test_mixed_nesting_destructuring
import regression/test_mixed_type_or_pattern_bug_fix
import regression/test_numeric_type_coercion_bug
import regression/test_pm1_type_equivalence_fix
import regression/test_pv1_bug_fix
import regression/test_rest_pattern_type_alias_fix
import regression/test_toHashSet_bug_fix
import regression/test_toHashSet_import_bug_final
import regression/test_variable_binding_conflicts_bug
import regression/test_variable_binding_same_var_only
import sequences/test_comprehensive_collection_support
import sequences/test_or_sequence_patterns
import sequences/test_phase1_sequence_patterns
import sequences/test_sequence_patterns
import set/test_comprehensive_optimizations
import set/test_mixed_enum_integer_set_optimization_bug
import set/test_set_pattern_optimization
import set/test_set_subset_operations
import set/test_set_wildcard_patterns
import table/test_at_pattern_table_rest_capture_bug
import table/test_empty_table_rest_pattern
import table/test_phase1_table_patterns
import table/test_ref_nil_table_value_bug
import table/test_structural_table_patterns
import table/test_table_ref_support
import table/test_typesafe_table_patterns
import test_mixed_type_literals
import tuple_test/test_at_pattern_tuple_subpattern_bug
import tuple_test/test_basic_nested_default_bug_fixed
import tuple_test/test_phase1_tuple_patterns
import tuple_test/test_realistic_or_tuple_bug
import tuple_test/test_sequence_tuple_option_binding_bug
import tuple_test/test_set_tuple_patterns
import tuple_test/test_tuple_layer_bug
import tuple_test/test_tuple_nil_literal_bug
import type_patterns/test_bool_alias_patterns
import type_patterns/test_idiomatic_type_patterns
import type_patterns/test_range_type_patterns
import type_patterns/test_type_pattern_syntax
import type_patterns/test_type_patterns
import type_patterns/test_type_system
import union/test_union_at_patterns
import union/test_union_comprehensive
import union/test_union_construction
import union/test_union_cross_module_export
import union/test_union_equality
import union/test_union_exhaustiveness
import union/test_union_extraction_methods
import union/test_union_field_defect_bug
import union/test_union_foundation
import union/test_union_generic_type_params_bug
import union/test_union_holds_or_workaround
import union/test_union_or_pattern_bug
import union/test_union_pattern_matching
import union/test_union_ref_ptr_types_bug
import union/test_union_string_repr
import union/test_union_type_based_matching
import union/test_union_type_checking
import union/test_union_value_access
import union/test_union_variant_equality_error
import union/test_union_variant_equality_solution
import union/test_union_variant_objects_bug
import use_cases/test_functional_programming_patterns
import use_cases/test_if_cases
import use_cases/test_implicit_variant_syntax
import use_cases/test_mathematical_patterns
import use_cases/test_real_world_examples
import use_cases/test_state_machine_patterns
import use_cases/test_user_container_patterns
import validation/test_error_handling
import validation/test_error_handling_patterns
import validation/test_integer_literal_types_bug
import validation/test_pattern_validation
import validation/test_phase1_nested_patterns
import validation/test_raw_string_literal_bug
import validation/test_validation_integration_check
import validation/test_wildcard_error
import variant/test_basic_dsl_syntax
import variant/test_complex_examples
import variant/test_constructor_name_collision_bug
import variant/test_equality_missing_operator_error
import variant/test_error_handling
import variant/test_mixed_param_constructors
import variant/test_multi_field
import variant/test_nested_variants
import variant/test_pattern_matching_integration
import variant/test_traditional_variant_exhaustiveness
import variant/test_variant_at_patterns
import variant/test_variant_dsl_exhaustiveness
import variant/test_variant_enum_discriminators
import variant/test_variant_equality
import variant/test_variant_export_cross_module
import variant/test_variant_export_private
import variant/test_variant_group_patterns
import variant/test_variant_literals
import variant/test_variant_or_patterns
import variant/test_variant_type_patterns
import variant/test_zero_param_constructors

# Function pattern test directory imports (5 files)
import "func/test_core_arity_patterns"
import "func/test_core_async_sync_patterns"
import "func/test_core_behavioral_patterns"
import "func/test_core_compound_patterns"
import "func/test_core_returns_patterns"

echo ""
echo "All test files imported and executed."
echo "Total test count: 279 (274 data pattern + 5 function pattern tests)"
echo ""
echo "Test files discovered:"
echo "  - test/advanced/test_bug_sequence_spread_bounds.nim"
echo "  - test/advanced/test_group_patterns.nim"
echo "  - test/advanced/test_multiple_spread_bug_fix.nim"
echo "  - test/advanced/test_sequence_nil_in_object_field_bug.nim"
echo "  - test/advanced/test_spread_negative_index_fix.nim"
echo "  - test/advanced/test_spread_pattern_index_collision_bug.nim"
echo "  - test/advanced/test_spread_pattern_object_field_bug.nim"
echo "  - test/at_pattern/test_at_pattern_conditions_bodies_mismatch_bug.nim"
echo "  - test/at_pattern/test_at_pattern_guard_fix.nim"
echo "  - test/at_pattern/test_at_pattern_guard_variable_scoping_bug.nim"
echo "  - test/at_pattern/test_at_pattern_or_bug_comprehensive.nim"
echo "  - test/at_pattern/test_at_pattern_or_complex_expressions_bug.nim"
echo "  - test/at_pattern/test_at_pattern_parentheses_break_bug.nim"
echo "  - test/at_pattern/test_at_patterns.nim"
echo "  - test/at_pattern/test_nested_at_pattern_bug_fix.nim"
echo "  - test/at_pattern/test_nested_at_pattern_with_guards_bug.nim"
echo "  - test/at_pattern/test_nil_at_pattern_basic.nim"
echo "  - test/at_pattern/test_nil_at_pattern_bug.nim"
echo "  - test/at_pattern/test_nil_at_pattern_nnknillit_bug.nim"
echo "  - test/at_pattern/test_or_at_binding_tuple_context_bug.nim"
echo "  - test/at_pattern/test_phase1_3_mixed_collection_at_patterns.nim"
echo "  - test/at_pattern/test_phase2_advanced_at_pattern_extensions.nim"
echo "  - test/at_pattern/test_sequence_at_pattern_both_syntaxes_bug.nim"
echo "  - test/at_pattern/test_set_at_patterns.nim"
echo "  - test/at_pattern/test_table_at_pattern_values_bug.nim"
echo "  - test/collections/test_comprehensive_linked_lists.nim"
echo "  - test/collections/test_deque_patterns.nim"
echo "  - test/collections/test_linkedlist_gaps_fixed.nim"
echo "  - test/construct_metadata/test_construct_metadata.nim"
echo "  - test/core/test_basic_patterns.nim"
echo "  - test/core/test_parsing_patterns.nim"
echo "  - test/count_table/test_count_table_patterns.nim"
echo "  - test/deep_nesting/test_10_layer_infrastructure_destructuring.nim"
echo "  - test/deep_nesting/test_complete_25_level_pattern_matching.nim"
echo "  - test/deep_nesting/test_complex_nested_collections.nim"
echo "  - test/deep_nesting/test_comprehensive_deep_destructuring.nim"
echo "  - test/deep_nesting/test_deep_nesting.nim"
echo "  - test/deep_nesting/test_extreme_nesting_edge_cases.nim"
echo "  - test/deep_nesting/test_final_deep_patterns_22.nim"
echo "  - test/deep_nesting/test_simple_deep_destructuring.nim"
echo "  - test/deep_nesting/test_true_deep_pattern_destructuring.nim"
echo "  - test/deep_nesting/test_true_deep_patterns.nim"
echo "  - test/deep_nesting/test_working_true_deep.nim"
echo "  - test/defaults/test_comprehensive_defaults.nim"
echo "  - test/defaults/test_default_patterns.nim"
echo "  - test/defaults/test_dual_syntax_defaults.nim"
echo "  - test/defaults/test_simple_defaults.nim"
echo "  - test/defaults/test_spread_default_values_bug.nim"
echo "  - test/defaults/test_table_defaults.nim"
echo "  - test/defaults/test_tuple_default_values_bug.nim"
echo "  - test/enhancements/test_13_csharp_patterns.nim"
echo "  - test/enhancements/test_adaptive_levenshtein_suggestions.nim"
echo "  - test/enhancements/test_comprehensive_future_enhancements.nim"
echo "  - test/enhancements/test_pattern_matching_limitations.nim"
echo "  - test/enhancements/test_structural_sequence_patterns.nim"
echo "  - test/enhancements/test_working_enhancements_summary.nim"
echo "  - test/enums/test_enum_patterns.nim"
echo "  - test/enums/test_enum_set_type_mismatch_bug.nim"
echo "  - test/enums/test_enum_variable_binding.nim"
echo "  - test/enums/test_nonsequential_ordinals.nim"
echo "  - test/enums/test_union_enum_collision.nim"
echo "  - test/exhaustiveness_chk/test_enum_exhaustiveness_errors.nim"
echo "  - test/exhaustiveness_chk/test_exhaustiveness.nim"
echo "  - test/exhaustiveness_chk/test_exhaustiveness_checking.nim"
echo "  - test/exhaustiveness_chk/test_option_exhaustiveness_errors.nim"
echo "  - test/exhaustiveness_chk/test_strict_exhaustiveness.nim"
echo "  - test/exhaustiveness_chk/test_variant_exhaustiveness_errors.nim"
echo "  - test/exhaustiveness_chk/test_variant_or_exhaustiveness.nim"
echo "  - test/func/test_core_arity_patterns.nim"
echo "  - test/func/test_core_async_sync_patterns.nim"
echo "  - test/func/test_core_behavioral_patterns.nim"
echo "  - test/func/test_core_compound_patterns.nim"
echo "  - test/func/test_core_returns_patterns.nim"
echo "  - test/guards/test_debug_guard_cross_ref.nim"
echo "  - test/guards/test_guard_binding_fix.nim"
echo "  - test/guards/test_guards.nim"
echo "  - test/integration/test_array_filtering_complete.nim"
echo "  - test/integration/test_collection_filtering_bug.nim"
echo "  - test/integration/test_collection_filtering_missing_functionality.nim"
echo "  - test/integration/test_count_table_filtering.nim"
echo "  - test/integration/test_deque_filtering.nim"
echo "  - test/integration/test_doubly_linked_list_filtering.nim"
echo "  - test/integration/test_doubly_linked_ring_filtering.nim"
echo "  - test/integration/test_gemini_bug5_collision_fix.nim"
echo "  - test/integration/test_nested_object_collection_filtering.nim"
echo "  - test/integration/test_ordered_table_filtering.nim"
echo "  - test/integration/test_phase1_2_complex_guard_combinations.nim"
echo "  - test/integration/test_phase1_error_messages.nim"
echo "  - test/integration/test_phase1_integration_deep_nesting.nim"
echo "  - test/integration/test_phase1_integration_edge_cases.nim"
echo "  - test/integration/test_phase1_integration_errors.nim"
echo "  - test/integration/test_phase1_integration_mixed.nim"
echo "  - test/integration/test_phase1_integration_real_world.nim"
echo "  - test/integration/test_phase1_integration_variants.nim"
echo "  - test/integration/test_set_filtering_simple.nim"
echo "  - test/integration/test_singly_linked_list_filtering.nim"
echo "  - test/integration/test_singly_linked_ring_filtering.nim"
echo "  - test/integration/test_table_filtering_simple.nim"
echo "  - test/json/test_json_pattern_matching.nim"
echo "  - test/json/test_jsonnode_array_patterns.nim"
echo "  - test/json/test_jsonnode_at_patterns.nim"
echo "  - test/json/test_jsonnode_basic_patterns.nim"
echo "  - test/json/test_jsonnode_guard_expressions.nim"
echo "  - test/json/test_jsonnode_literal_matching.nim"
echo "  - test/json/test_jsonnode_nested_object_patterns.nim"
echo "  - test/json/test_jsonnode_or_patterns.nim"
echo "  - test/json/test_jsonnode_set_patterns.nim"
echo "  - test/json/test_jsonnode_tuple_patterns.nim"
echo "  - test/json/test_jsonnode_type_patterns.nim"
echo "  - test/negative/test_negative_deque_linkedlist_errors.nim"
echo "  - test/negative/test_negative_enum_errors.nim"
echo "  - test/negative/test_negative_jsonnode_errors.nim"
echo "  - test/negative/test_negative_object_field_errors.nim"
echo "  - test/negative/test_negative_option_errors.nim"
echo "  - test/negative/test_negative_ref_ptr_errors.nim"
echo "  - test/negative/test_negative_sequence_array_errors.nim"
echo "  - test/negative/test_negative_set_errors.nim"
echo "  - test/negative/test_negative_table_errors.nim"
echo "  - test/negative/test_negative_tuple_count_errors.nim"
echo "  - test/negative/test_negative_type_mismatches.nim"
echo "  - test/negative/test_negative_union_errors.nim"
echo "  - test/negative/test_negative_variant_errors.nim"
echo "  - test/object_class/test_basic_deep_object_destructuring.nim"
echo "  - test/objects/test_class_patterns.nim"
echo "  - test/objects/test_deep_object_destructuring.nim"
echo "  - test/objects/test_object_constructor_at_pattern_bug_fix.nim"
echo "  - test/objects/test_object_rest_destructuring.nim"
echo "  - test/objects/test_phase1_object_patterns.nim"
echo "  - test/objects/test_structural_object_patterns.nim"
echo "  - test/options/test_deep_mixed_pattern_issome_bug.nim"
echo "  - test/options/test_nested_option_patterns_simple.nim"
echo "  - test/options/test_option_patterns.nim"
echo "  - test/options/test_option_template_inconsistency_bug.nim"
echo "  - test/options/test_ref_option_bug_comprehensive.nim"
echo "  - test/or_patterns/test_or_at_table_rest_capture.nim"
echo "  - test/or_patterns/test_or_implicit_guard_patterns.nim"
echo "  - test/or_patterns/test_or_pattern_guard_binding_bug.nim"
echo "  - test/or_patterns/test_or_pattern_optimization.nim"
echo "  - test/or_patterns/test_or_pattern_some_none_bug.nim"
echo "  - test/or_patterns/test_or_pattern_variable_binding_bug.nim"
echo "  - test/or_patterns/test_or_pattern_variable_binding_complete.nim"
echo "  - test/or_patterns/test_or_patterns.nim"
echo "  - test/other/test_advanced_patterns.nim"
echo "  - test/other/test_all_patterns_22_levels.nim"
echo "  - test/other/test_api_routes_fixed.nim"
echo "  - test/pattern_validation/test_validation_compile_time.nim"
echo "  - test/pattern_validation/test_validation_deque.nim"
echo "  - test/pattern_validation/test_validation_enum.nim"
echo "  - test/pattern_validation/test_validation_jsonnode.nim"
echo "  - test/pattern_validation/test_validation_linkedlist.nim"
echo "  - test/pattern_validation/test_validation_nested_patterns.nim"
echo "  - test/pattern_validation/test_validation_operator_hints.nim"
echo "  - test/pattern_validation/test_validation_option.nim"
echo "  - test/pattern_validation/test_validation_ptr.nim"
echo "  - test/pattern_validation/test_validation_ref.nim"
echo "  - test/pattern_validation/test_validation_sequence.nim"
echo "  - test/pattern_validation/test_validation_set.nim"
echo "  - test/pattern_validation/test_validation_table.nim"
echo "  - test/pattern_validation/test_validation_union.nim"
echo "  - test/pattern_validation/test_validation_union_init_errors.nim"
echo "  - test/pattern_validation/test_validation_variant.nim"
echo "  - test/polymorphic/test_basic_polymorphic.nim"
echo "  - test/polymorphic/test_complex_polymorphic.nim"
echo "  - test/polymorphic/test_deep_polymorphic.nim"
echo "  - test/polymorphic/test_sequence_polymorphic.nim"
echo "  - test/polymorphic/test_table_polymorphic.nim"
echo "  - test/references/test_ptr_type_pattern_bug.nim"
echo "  - test/references/test_ref_at_nested_variable_scoping_bug.nim"
echo "  - test/references/test_ref_field_object_constructor_bug.nim"
echo "  - test/references/test_ref_nil_object_constructor_priority_bug.nim"
echo "  - test/references/test_ref_ptr_object_constructor_pattern_bug.nim"
echo "  - test/references/test_ref_ptr_patterns.nim"
echo "  - test/references/test_ref_sequence_field_comparison_bug.nim"
echo "  - test/references/test_simple_pointer_bug.nim"
echo "  - test/regression/test_bug_critical_numeric_type_coercion.nim"
echo "  - test/regression/test_bug_critical_type_coercion.nim"
echo "  - test/regression/test_bug_numeric_type_coercion.nim"
echo "  - test/regression/test_circular_reference_bugs.nim"
echo "  - test/regression/test_comprehensive_bug_validation.nim"
echo "  - test/regression/test_discovered_pattern_bugs.nim"
echo "  - test/regression/test_empty_collection_patterns_bug.nim"
echo "  - test/regression/test_mixed_nesting_destructuring.nim"
echo "  - test/regression/test_mixed_type_or_pattern_bug_fix.nim"
echo "  - test/regression/test_numeric_type_coercion_bug.nim"
echo "  - test/regression/test_pm1_type_equivalence_fix.nim"
echo "  - test/regression/test_pv1_bug_fix.nim"
echo "  - test/regression/test_rest_pattern_type_alias_fix.nim"
echo "  - test/regression/test_toHashSet_bug_fix.nim"
echo "  - test/regression/test_toHashSet_import_bug_final.nim"
echo "  - test/regression/test_variable_binding_conflicts_bug.nim"
echo "  - test/regression/test_variable_binding_same_var_only.nim"
echo "  - test/sequences/test_comprehensive_collection_support.nim"
echo "  - test/sequences/test_or_sequence_patterns.nim"
echo "  - test/sequences/test_phase1_sequence_patterns.nim"
echo "  - test/sequences/test_sequence_patterns.nim"
echo "  - test/set/test_comprehensive_optimizations.nim"
echo "  - test/set/test_mixed_enum_integer_set_optimization_bug.nim"
echo "  - test/set/test_set_pattern_optimization.nim"
echo "  - test/set/test_set_subset_operations.nim"
echo "  - test/set/test_set_wildcard_patterns.nim"
echo "  - test/table/test_at_pattern_table_rest_capture_bug.nim"
echo "  - test/table/test_empty_table_rest_pattern.nim"
echo "  - test/table/test_phase1_table_patterns.nim"
echo "  - test/table/test_ref_nil_table_value_bug.nim"
echo "  - test/table/test_structural_table_patterns.nim"
echo "  - test/table/test_table_ref_support.nim"
echo "  - test/table/test_typesafe_table_patterns.nim"
echo "  - test/test_mixed_type_literals.nim"
echo "  - test/tuple_test/test_at_pattern_tuple_subpattern_bug.nim"
echo "  - test/tuple_test/test_basic_nested_default_bug_fixed.nim"
echo "  - test/tuple_test/test_phase1_tuple_patterns.nim"
echo "  - test/tuple_test/test_realistic_or_tuple_bug.nim"
echo "  - test/tuple_test/test_sequence_tuple_option_binding_bug.nim"
echo "  - test/tuple_test/test_set_tuple_patterns.nim"
echo "  - test/tuple_test/test_tuple_layer_bug.nim"
echo "  - test/tuple_test/test_tuple_nil_literal_bug.nim"
echo "  - test/type_patterns/test_bool_alias_patterns.nim"
echo "  - test/type_patterns/test_idiomatic_type_patterns.nim"
echo "  - test/type_patterns/test_range_type_patterns.nim"
echo "  - test/type_patterns/test_type_pattern_syntax.nim"
echo "  - test/type_patterns/test_type_patterns.nim"
echo "  - test/type_patterns/test_type_system.nim"
echo "  - test/union/test_union_at_patterns.nim"
echo "  - test/union/test_union_comprehensive.nim"
echo "  - test/union/test_union_construction.nim"
echo "  - test/union/test_union_cross_module_export.nim"
echo "  - test/union/test_union_equality.nim"
echo "  - test/union/test_union_exhaustiveness.nim"
echo "  - test/union/test_union_extraction_methods.nim"
echo "  - test/union/test_union_field_defect_bug.nim"
echo "  - test/union/test_union_foundation.nim"
echo "  - test/union/test_union_generic_type_params_bug.nim"
echo "  - test/union/test_union_holds_or_workaround.nim"
echo "  - test/union/test_union_or_pattern_bug.nim"
echo "  - test/union/test_union_pattern_matching.nim"
echo "  - test/union/test_union_ref_ptr_types_bug.nim"
echo "  - test/union/test_union_string_repr.nim"
echo "  - test/union/test_union_type_based_matching.nim"
echo "  - test/union/test_union_type_checking.nim"
echo "  - test/union/test_union_value_access.nim"
echo "  - test/union/test_union_variant_equality_error.nim"
echo "  - test/union/test_union_variant_equality_solution.nim"
echo "  - test/union/test_union_variant_objects_bug.nim"
echo "  - test/use_cases/test_functional_programming_patterns.nim"
echo "  - test/use_cases/test_if_cases.nim"
echo "  - test/use_cases/test_implicit_variant_syntax.nim"
echo "  - test/use_cases/test_mathematical_patterns.nim"
echo "  - test/use_cases/test_real_world_examples.nim"
echo "  - test/use_cases/test_state_machine_patterns.nim"
echo "  - test/use_cases/test_user_container_patterns.nim"
echo "  - test/validation/test_error_handling.nim"
echo "  - test/validation/test_error_handling_patterns.nim"
echo "  - test/validation/test_integer_literal_types_bug.nim"
echo "  - test/validation/test_pattern_validation.nim"
echo "  - test/validation/test_phase1_nested_patterns.nim"
echo "  - test/validation/test_raw_string_literal_bug.nim"
echo "  - test/validation/test_validation_integration_check.nim"
echo "  - test/validation/test_wildcard_error.nim"
echo "  - test/variant/test_basic_dsl_syntax.nim"
echo "  - test/variant/test_complex_examples.nim"
echo "  - test/variant/test_constructor_name_collision_bug.nim"
echo "  - test/variant/test_equality_missing_operator_error.nim"
echo "  - test/variant/test_error_handling.nim"
echo "  - test/variant/test_mixed_param_constructors.nim"
echo "  - test/variant/test_multi_field.nim"
echo "  - test/variant/test_nested_variants.nim"
echo "  - test/variant/test_pattern_matching_integration.nim"
echo "  - test/variant/test_traditional_variant_exhaustiveness.nim"
echo "  - test/variant/test_variant_at_patterns.nim"
echo "  - test/variant/test_variant_dsl_exhaustiveness.nim"
echo "  - test/variant/test_variant_enum_discriminators.nim"
echo "  - test/variant/test_variant_equality.nim"
echo "  - test/variant/test_variant_export_cross_module.nim"
echo "  - test/variant/test_variant_export_private.nim"
echo "  - test/variant/test_variant_group_patterns.nim"
echo "  - test/variant/test_variant_literals.nim"
echo "  - test/variant/test_variant_or_patterns.nim"
echo "  - test/variant/test_variant_type_patterns.nim"
echo "  - test/variant/test_zero_param_constructors.nim"
echo ""
echo "To regenerate this file: nim c -r test/run_scan_for_tests.nim"
